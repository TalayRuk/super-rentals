<li>
  <!-- Add Link  -->
  {{#link-to 'rental' rental.id}}{{rental.owner}}'s {{rental.type}} in {{rental.city}} {{/link-to}}
  <!-- add hide & show image function for each rental -->
  {{#if isImageShowing}}
  <!-- isImageShowing set to False at app/components/rental-tile.js -->
    <p>
      <img src="{{rental.image}}" alt="{{rental.type}}" {{action 'imageHide'}}>
    </p>
  {{else}}
      <button {{action 'imageShow'}}>Show Image</button>
      <!-- {{action 'imageShow'}} use to trigger displaying image-->
  {{/if}} <!-- closing tag for if -->
  <!--**By DEFAULT {{action}} helper listens for click events. When it's at a button, the action we denote will be automatcially triggered when that button is clicked   -->

  <!-- when 'isImageShowing' value is true, #if}} statement in rental-tile.hbs will display our image -->

  <!-- add action 'imageHide' helper to image. We can bind handle bars action handlers to any html element that is clickable -->
  <!-- {{update-rental rental=rental update="update"}} moved to rental.hbs -->
  <!-- ***inorder to pass the rental object, and the update action we're about to create btwn the 2 components. -->
  <!-- <button {{action 'delete' rental}}>Delete Rental</button> moved to rental-detail.hbs -->
</li>

<!-- Add update function inside this file above the delete button -->
<!-- Y "update" -->
<!-- we r mapping the update() action coming up from the component/update-rental.hbs(on the left of =) to the update() action that we'll write on update-rental.js -->
